{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar DiscussionDetails = function DiscussionDetails(props) {\n  var data = props.route.params.discussion;\n  var item = props.route.params.discussion;\n  var baseURL = 'https://whatshotapp.herokuapp.com/api';\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  var _useState3 = useState(props.route.params.username),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var addComment = function _callee() {\n    var _data, discussions;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(comment != '' && user != '')) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(baseURL + '/dis/comment/' + item._id, {\n              method: 'put',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                comment: comment,\n                commentAuthor: poster\n              })\n            }));\n\n          case 3:\n            _data = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(_data.json());\n\n          case 6:\n            discussions = _context.sent;\n            console.log(JSON.stringify(discussions));\n            _context.next = 11;\n            break;\n\n          case 10:\n            Alert.alert('Add Comment', 'Please enetr comment for this article');\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log(data);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.row,\n      children: [_jsxs(Text, {\n        style: styles.title,\n        children: [data.title, \" \"]\n      }), _jsx(View, {\n        children: _jsx(Image, {\n          style: styles.avatar,\n          source: {\n            uri: data.authorAvatar\n          }\n        })\n      }), _jsx(Text, {\n        style: {\n          fontSize: 20,\n          marginLeft: 5\n        },\n        children: data.author\n      })]\n    }), _jsx(Text, {}), _jsx(View, {\n      style: {\n        borderBottomColor: 'black',\n        borderBottomWidth: 1,\n        width: '100%'\n      },\n      children: _jsx(Text, {})\n    }), _jsx(View, {\n      children: _jsx(Image, {\n        style: styles.image,\n        source: {\n          uri: data.postImage\n        }\n      })\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.content,\n        children: data.content\n      }), _jsx(View, {\n        style: {\n          marginTop: 10,\n          borderBottomColor: 'black',\n          borderBottomWidth: 1,\n          width: '100%'\n        },\n        children: _jsx(Text, {})\n      }), _jsx(Text, {\n        style: styles.comment,\n        children: \"Comments : \"\n      }), _jsxs(View, {\n        style: styles.addComment,\n        children: [_jsx(Text, {}), _jsx(TextInput, {\n          placeholder: \"Enter comment here\",\n          style: styles.addCommentInput\n        }), _jsx(TouchableOpacity, {\n          style: styles.btnComment,\n          onPress: function onPress() {\n            return addComment;\n          },\n          children: _jsx(Text, {\n            style: {\n              fontSize: 18,\n              fontWeight: 'bold',\n              color: '#39C0F6'\n            },\n            children: \"Post\"\n          })\n        })]\n      }), _jsx(FlatList, {\n        data: data.comments,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsxs(View, {\n            style: styles.comments,\n            children: [_jsxs(View, {\n              style: {\n                flexDirection: 'row'\n              },\n              children: [_jsx(Image, {\n                style: {\n                  width: 47,\n                  height: 50\n                },\n                source: {\n                  uri: item.avatar\n                }\n              }), _jsx(Text, {\n                style: {\n                  fontSize: 18\n                },\n                children: item.commentAuthor\n              })]\n            }), _jsx(Text, {\n              style: {\n                fontSize: 24\n              },\n              children: item.comment\n            })]\n          });\n        }\n      }, function (item) {\n        return item._id;\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 36,\n    color: '#A251B0'\n  },\n  row: {\n    marginTop: 40,\n    flexDirection: 'row',\n    margin: 10\n  },\n  content: {\n    margin: 20,\n    marginTop: 30,\n    fontSize: 28\n  },\n  image: {\n    marginTop: 20,\n    width: 600,\n    height: 400\n  },\n  avatar: {\n    padding: 5,\n    width: 67,\n    height: 70\n  },\n  comment: {\n    fontSize: 40,\n    margin: 20\n  },\n  comments: {\n    margin: 20\n  },\n  addComment: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  btnComment: {\n    borderWidth: 1,\n    borderRadius: 15,\n    padding: 10,\n    marginLeft: 5\n  },\n  addCommentInput: {\n    borderWidth: 1,\n    borderColor: '#39C0F6',\n    padding: 10,\n    fontSize: 18\n  }\n});\nexport default DiscussionDetails;","map":{"version":3,"sources":["C:/Users/yacou/OneDrive/שולחן העבודה/whatsHot/screens/DiscussionDetails.js"],"names":["React","useState","AntDesign","FlatList","TouchableOpacity","DiscussionDetails","props","data","route","params","discussion","item","baseURL","comment","setComment","username","user","setUser","addComment","fetch","_id","method","headers","body","JSON","stringify","commentAuthor","poster","json","discussions","console","log","Alert","alert","styles","container","row","title","avatar","uri","authorAvatar","fontSize","marginLeft","author","borderBottomColor","borderBottomWidth","width","image","postImage","content","marginTop","addCommentInput","btnComment","fontWeight","color","comments","flexDirection","height","StyleSheet","create","flex","backgroundColor","alignItems","margin","padding","borderWidth","borderRadius","borderColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, Image, TextInput } from 'react-native';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\r\n\r\nconst DiscussionDetails = (props) => {\r\n  let data = props.route.params.discussion;\r\n\r\n  const item = props.route.params.discussion;\r\n  const baseURL = 'https://whatshotapp.herokuapp.com/api';\r\n  const [comment, setComment] = useState('');\r\n  const [user, setUser] = useState(props.route.params.username);\r\n\r\n  const addComment = async () => {\r\n    if (comment != '' && user != '') {\r\n      const data = await fetch(baseURL + '/dis/comment/' + item._id, {\r\n        method: 'put',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          comment: comment,\r\n          commentAuthor: poster,\r\n        }),\r\n      });\r\n      const discussions = await data.json();\r\n      console.log(JSON.stringify(discussions));\r\n    } else {\r\n      Alert.alert('Add Comment', 'Please enetr comment for this article');\r\n    }\r\n  };\r\n  console.log(data);\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.row}>\r\n        <Text style={styles.title}>{data.title} </Text>\r\n        <View>\r\n          <Image style={styles.avatar} source={{ uri: data.authorAvatar }} />\r\n        </View>\r\n        <Text style={{ fontSize: 20, marginLeft: 5 }}>{data.author}</Text>\r\n      </View>\r\n      <Text></Text>\r\n      <View\r\n        style={{\r\n          borderBottomColor: 'black',\r\n          borderBottomWidth: 1,\r\n          width: '100%',\r\n        }}\r\n      >\r\n        <Text></Text>\r\n      </View>\r\n      <View>\r\n        <Image style={styles.image} source={{ uri: data.postImage }} />\r\n      </View>\r\n      <View>\r\n        <Text style={styles.content}>{data.content}</Text>\r\n        <View\r\n          style={{\r\n            marginTop: 10,\r\n            borderBottomColor: 'black',\r\n            borderBottomWidth: 1,\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <Text></Text>\r\n        </View>\r\n        <Text style={styles.comment}>Comments : </Text>\r\n\r\n        {/* add comment */}\r\n        <View style={styles.addComment}>\r\n          <Text></Text>\r\n          <TextInput\r\n            placeholder=\"Enter comment here\"\r\n            style={styles.addCommentInput}\r\n          />\r\n          <TouchableOpacity style={styles.btnComment} onPress={()=>addComment}>\r\n            <Text\r\n              style={{ fontSize: 18, fontWeight: 'bold', color: '#39C0F6' }}\r\n            >\r\n              Post\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <FlatList\r\n          data={data.comments}\r\n          key={(item) => item._id}\r\n          renderItem={({ item }) => (\r\n            <View style={styles.comments}>\r\n              <View style={{ flexDirection: 'row' }}>\r\n                <Image\r\n                  style={{ width: 47, height: 50 }}\r\n                  source={{ uri: item.avatar }}\r\n                />\r\n                <Text style={{ fontSize: 18 }}>{item.commentAuthor}</Text>\r\n              </View>\r\n\r\n              <Text style={{ fontSize: 24 }}>{item.comment}</Text>\r\n            </View>\r\n          )}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 36,\r\n    color: '#A251B0',\r\n  },\r\n  row: {\r\n    marginTop: 40,\r\n    flexDirection: 'row',\r\n    margin: 10,\r\n  },\r\n  content: {\r\n    margin: 20,\r\n    marginTop: 30,\r\n    fontSize: 28,\r\n  },\r\n  image: {\r\n    marginTop: 20,\r\n    width: 600,\r\n    height: 400,\r\n  },\r\n  avatar: {\r\n    padding: 5,\r\n    width: 67,\r\n    height: 70,\r\n  },\r\n  comment: {\r\n    fontSize: 40,\r\n    margin: 20,\r\n  },\r\n  comments: {\r\n    margin: 20,\r\n  },\r\n  addComment: {\r\n    flexDirection: 'row',\r\n    margin: 20,\r\n  },\r\n  btnComment: {\r\n    borderWidth: 1,\r\n    borderRadius: 15,\r\n    padding: 10,\r\n    marginLeft: 5,\r\n  },\r\n  addCommentInput: {\r\n    borderWidth: 1,\r\n    borderColor: '#39C0F6',\r\n    padding: 10,\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nexport default DiscussionDetails;\r\n"]},"metadata":{},"sourceType":"module"}