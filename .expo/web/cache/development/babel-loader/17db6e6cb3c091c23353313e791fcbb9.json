{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport moment from 'moment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Discussions = function Discussions(props) {\n  var baseURL = 'https://whatshotapp.herokuapp.com/api';\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      allData = _useState2[0],\n      setAllData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    loadAllDiscussions();\n  }, []);\n\n  var loadAllDiscussions = function _callee() {\n    var data, discussions;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(baseURL + '/dis/getAllDisccusions', {\n              method: 'get'\n            }));\n\n          case 3:\n            data = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(data.json());\n\n          case 6:\n            discussions = _context.sent;\n            setAllData(discussions);\n            setLoading(false);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [loading ? _jsx(ActivityIndicator, {\n      color: \"#F7567C\",\n      size: \"large\"\n    }) : _jsx(View, {\n      style: {\n        width: '100%'\n      },\n      children: _jsx(FlatList, {\n        data: allData.Disccusions,\n        keyExtractor: function keyExtractor(item) {\n          return item._id;\n        },\n        renderItem: function renderItem(itemRow) {\n          return _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              props.navigation.navigate('DiscussionDetails'), {\n                discussion: itemRow.item\n              };\n            },\n            style: styles.row,\n            children: [_jsx(Image, {\n              source: {\n                uri: itemRow.item.authorAvatar\n              },\n              style: styles.avatar\n            }), _jsxs(View, {\n              style: {\n                width: '60%',\n                marginLeft: 12\n              },\n              children: [_jsxs(Text, {\n                style: styles.postTitle,\n                children: [itemRow.item.title, \" | \", itemRow.item.author]\n              }), _jsxs(Text, {\n                style: styles.postContent,\n                children: [itemRow.item.content, \" |\", ' ', moment(itemRow.item.Date).format('DD/MM/yyyy')]\n              })]\n            }), _jsx(View, {\n              style: {\n                width: '20%',\n                marginLeft: 12\n              },\n              children: _jsxs(Text, {\n                style: styles.postContent,\n                children: [itemRow.item.comments.length, \" Comments\"]\n              })\n            })]\n          });\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(Text, {\n        children: \"ADD\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  postAuthor: {\n    fontSize: 12,\n    fontWeight: '300'\n  },\n  postContent: {\n    fontSize: 14,\n    fontWeight: '300'\n  },\n  postTitle: {\n    fontSize: 16,\n    fontWeight: '500'\n  },\n  row: {\n    width: '100%',\n    backgroundColor: '#FCFCFC',\n    flexDirection: 'row',\n    borderRadius: 12,\n    padding: 12,\n    marginBottom: 12\n  },\n  avatar: {\n    width: 46,\n    height: 50\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#5D576B',\n    padding: 30\n  }\n});\nexport default Discussions;","map":{"version":3,"sources":["C:/Users/yacou/OneDrive/שולחן העבודה/whatsHot/screens/Discussions.js"],"names":["React","useState","useEffect","moment","Discussions","props","baseURL","allData","setAllData","loading","setLoading","loadAllDiscussions","fetch","method","data","json","discussions","styles","container","width","Disccusions","item","_id","itemRow","navigation","navigate","discussion","row","uri","authorAvatar","avatar","marginLeft","postTitle","title","author","postContent","content","Date","format","comments","length","StyleSheet","create","postAuthor","fontSize","fontWeight","backgroundColor","flexDirection","borderRadius","padding","marginBottom","height","flex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Image,\r\n  ActivityIndicator,\r\n  FlatList,\r\n} from 'react-native';\r\nimport moment from 'moment';\r\nconst Discussions = (props) => {\r\n  const baseURL = 'https://whatshotapp.herokuapp.com/api';\r\n  const [allData, setAllData] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadAllDiscussions();\r\n  }, []);\r\n\r\n  const loadAllDiscussions = async () => {\r\n    setLoading(true);\r\n    const data = await fetch(baseURL + '/dis/getAllDisccusions', {\r\n      method: 'get',\r\n    });\r\n    const discussions = await data.json();\r\n    setAllData(discussions);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {loading ? (\r\n        <ActivityIndicator color=\"#F7567C\" size=\"large\" />\r\n      ) : (\r\n        <View style={{ width: '100%' }}>\r\n          <FlatList\r\n            data={allData.Disccusions}\r\n            keyExtractor={(item) => item._id}\r\n            renderItem={(itemRow) => (\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  props.navigation.navigate('DiscussionDetails'),\r\n                    { discussion: itemRow.item };\r\n                }}\r\n                style={styles.row}\r\n              >\r\n                <Image\r\n                  source={{ uri: itemRow.item.authorAvatar }}\r\n                  style={styles.avatar}\r\n                />\r\n                <View style={{ width: '60%', marginLeft: 12 }}>\r\n                  <Text style={styles.postTitle}>\r\n                    {itemRow.item.title} | {itemRow.item.author}\r\n                  </Text>\r\n                  <Text style={styles.postContent}>\r\n                    {itemRow.item.content} |{' '}\r\n                    {moment(itemRow.item.Date).format('DD/MM/yyyy')}\r\n                  </Text>\r\n                </View>\r\n                <View style={{ width: '20%', marginLeft: 12 }}>\r\n                  <Text style={styles.postContent}>\r\n                    {itemRow.item.comments.length} Comments\r\n                  </Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            )}\r\n          />\r\n        </View>\r\n      )}\r\n      <TouchableOpacity>\r\n        <Text>ADD</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  postAuthor: {\r\n    fontSize: 12,\r\n    fontWeight: '300',\r\n  },\r\n  postContent: {\r\n    fontSize: 14,\r\n    fontWeight: '300',\r\n  },\r\n  postTitle: {\r\n    fontSize: 16,\r\n    fontWeight: '500',\r\n  },\r\n  row: {\r\n    width: '100%',\r\n    backgroundColor: '#FCFCFC',\r\n    flexDirection: 'row',\r\n    borderRadius: 12,\r\n    padding: 12,\r\n    marginBottom: 12,\r\n  },\r\n  avatar: {\r\n    width: 46,\r\n    height: 50,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#5D576B',\r\n    padding: 30,\r\n  },\r\n});\r\n\r\nexport default Discussions;\r\n"]},"metadata":{},"sourceType":"module"}