{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport moment from 'moment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Discussions = function Discussions(props) {\n  var baseURL = 'https://whatshotapp.herokuapp.com/api';\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      allData = _useState2[0],\n      setAllData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    loadAllDiscussions();\n  }, []);\n\n  var loadAllDiscussions = function _callee() {\n    var data, discussions;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(baseURL + '/dis/getAllDisccusions', {\n              method: 'get'\n            }));\n\n          case 3:\n            data = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(data.json());\n\n          case 6:\n            discussions = _context.sent;\n            setAllData(discussions);\n            setLoading(false);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [loading ? _jsx(ActivityIndicator, {\n      color: \"#F7567C\",\n      size: \"large\"\n    }) : _jsx(View, {\n      style: {\n        width: '100%'\n      },\n      children: _jsx(FlatList, {\n        data: allData.Disccusions,\n        keyExtractor: function keyExtractor(item) {\n          return item._id;\n        },\n        renderItem: function renderItem(itemRow) {\n          return _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              props.navigation.navigate('DiscussionDetails'), {\n                discussion: itemRow.item\n              };\n            },\n            style: styles.row,\n            children: [_jsx(Image, {\n              source: {\n                uri: itemRow.item.authorAvatar\n              },\n              style: styles.avatar\n            }), _jsxs(View, {\n              style: {\n                width: '60%',\n                marginLeft: 12\n              },\n              children: [_jsxs(Text, {\n                style: styles.postTitle,\n                children: [itemRow.item.title, \" | \", itemRow.item.author]\n              }), _jsxs(Text, {\n                style: styles.postContent,\n                children: [itemRow.item.content, \" | \", moment(itemRow.item.Date).format('DD/MM/yyyy')]\n              })]\n            }), _jsx(View, {\n              style: {\n                width: '20%',\n                marginLeft: 12\n              },\n              children: _jsxs(Text, {\n                style: styles.postContent,\n                children: [itemRow.item.comments.length, \" Comments\"]\n              })\n            })]\n          });\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      children: _jsx(Text, {})\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  postAuthor: {\n    fontSize: 12,\n    fontWeight: '300'\n  },\n  postContent: {\n    fontSize: 14,\n    fontWeight: '300'\n  },\n  postTitle: {\n    fontSize: 16,\n    fontWeight: '500'\n  },\n  row: {\n    width: '100%',\n    backgroundColor: '#FCFCFC',\n    flexDirection: 'row',\n    borderRadius: 12,\n    padding: 12,\n    marginBottom: 12\n  },\n  avatar: {\n    width: 46,\n    height: 50\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#5D576B',\n    padding: 30\n  }\n});\nexport default Discussions;","map":{"version":3,"sources":["C:/Users/yacou/OneDrive/שולחן העבודה/whatsHot/screens/Discussions.js"],"names":["React","useState","useEffect","moment","Discussions","props","baseURL","allData","setAllData","loading","setLoading","loadAllDiscussions","fetch","method","data","json","discussions","styles","container","width","Disccusions","item","_id","itemRow","navigation","navigate","discussion","row","uri","authorAvatar","avatar","marginLeft","postTitle","title","author","postContent","content","Date","format","comments","length","StyleSheet","create","postAuthor","fontSize","fontWeight","backgroundColor","flexDirection","borderRadius","padding","marginBottom","height","flex"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, Image, ActivityIndicator, FlatList} from 'react-native';\r\nimport moment from 'moment';\r\nconst Discussions = props => {\r\n\r\n  const baseURL = 'https://whatshotapp.herokuapp.com/api';\r\n  const [allData, setAllData] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    loadAllDiscussions();\r\n  }, []);\r\n\r\n  const loadAllDiscussions = async() => {\r\n    setLoading(true);\r\n    const data = await fetch(baseURL + '/dis/getAllDisccusions',{\r\n      method: 'get'\r\n    });\r\n    const discussions = await data.json();\r\n    setAllData(discussions);\r\n    setLoading(false);\r\n  }\r\n\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n          {\r\n            loading ? (\r\n              <ActivityIndicator color='#F7567C' size='large' />\r\n            ) : (\r\n              <View style={{width:'100%'}}>\r\n              <FlatList\r\n                data={allData.Disccusions}\r\n                keyExtractor={item => item._id}\r\n                renderItem={itemRow => \r\n                  <TouchableOpacity onPress={() => { props.navigation.navigate('DiscussionDetails'), {discussion:itemRow.item } }} style={styles.row}>    \r\n                    <Image source={{uri: itemRow.item.authorAvatar}} style={styles.avatar} />\r\n                    <View style={{width:'60%', marginLeft:12}}>\r\n                      <Text style={styles.postTitle}>{itemRow.item.title} | {itemRow.item.author}</Text>\r\n                      <Text style={styles.postContent}>{itemRow.item.content} | {moment(itemRow.item.Date).format('DD/MM/yyyy')}</Text>\r\n                    </View>\r\n                    <View style={{width:'20%', marginLeft:12}}>\r\n                      <Text style={styles.postContent}>{itemRow.item.comments.length} Comments</Text>\r\n                    </View>\r\n                  </TouchableOpacity>}\r\n            />\r\n            </View>\r\n            )\r\n          }\r\n          <TouchableOpacity>\r\n            <Text></Text></TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  postAuthor:{\r\n    fontSize:12, fontWeight:'300'\r\n  },\r\n  postContent: {\r\n    fontSize:14, fontWeight:'300'\r\n  },\r\n  postTitle:{\r\n    fontSize:16, fontWeight:'500'\r\n  },\r\n  row:{\r\n    width:'100%', backgroundColor:'#FCFCFC', flexDirection:'row',\r\n    borderRadius:12, padding:12, marginBottom:12\r\n  },\r\n  avatar:{\r\n    width:46, height:50\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#5D576B',\r\n    padding:30\r\n  },\r\n  });\r\n  \r\nexport default Discussions;"]},"metadata":{},"sourceType":"module"}